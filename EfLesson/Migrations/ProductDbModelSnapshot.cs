// <auto-generated />
using System;
using System.Collections.Generic;
using EfLesson.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EfLesson.Migrations
{
    [DbContext(typeof(ProductDb))]
    partial class ProductDbModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BasketModelUserModel", b =>
                {
                    b.Property<int>("UserBasketBasketId")
                        .HasColumnType("integer");

                    b.Property<int>("UserModelsUserId")
                        .HasColumnType("integer");

                    b.HasKey("UserBasketBasketId", "UserModelsUserId");

                    b.HasIndex("UserModelsUserId");

                    b.ToTable("BasketModelUserModel");
                });

            modelBuilder.Entity("EfLesson.Models.BasketModel", b =>
                {
                    b.Property<int>("BasketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("BasketId"));

                    b.Property<List<int>>("ProductsId")
                        .IsRequired()
                        .HasColumnType("integer[]");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("BasketId");

                    b.ToTable("usersbaskets");
                });

            modelBuilder.Entity("EfLesson.Models.OrderModel", b =>
                {
                    b.Property<string>("OrderId")
                        .HasColumnType("text");

                    b.Property<DateTime>("OrderEndTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("OrderStartTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("OrderState")
                        .HasColumnType("boolean");

                    b.Property<List<int>>("ProductsId")
                        .IsRequired()
                        .HasColumnType("integer[]");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("OrderId");

                    b.ToTable("OrderModel");
                });

            modelBuilder.Entity("EfLesson.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ProductId"));

                    b.Property<int?>("BasketModelBasketId")
                        .HasColumnType("integer");

                    b.Property<string>("OrderModelOrderId")
                        .HasColumnType("text");

                    b.Property<string>("ProductCategory")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ProductCount")
                        .HasColumnType("integer");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProductPhoto")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ProductPrice")
                        .HasColumnType("integer");

                    b.HasKey("ProductId");

                    b.HasIndex("BasketModelBasketId");

                    b.HasIndex("OrderModelOrderId");

                    b.ToTable("productscatalog");
                });

            modelBuilder.Entity("EfLesson.Models.UserModel", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("BasketId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<List<int>>("OrdersId")
                        .IsRequired()
                        .HasColumnType("integer[]");

                    b.Property<int>("PhoneNumber")
                        .HasColumnType("integer");

                    b.HasKey("UserId");

                    b.ToTable("users");
                });

            modelBuilder.Entity("OrderModelUserModel", b =>
                {
                    b.Property<string>("OrdersOrderId")
                        .HasColumnType("text");

                    b.Property<int>("UsersUserId")
                        .HasColumnType("integer");

                    b.HasKey("OrdersOrderId", "UsersUserId");

                    b.HasIndex("UsersUserId");

                    b.ToTable("OrderModelUserModel");
                });

            modelBuilder.Entity("BasketModelUserModel", b =>
                {
                    b.HasOne("EfLesson.Models.BasketModel", null)
                        .WithMany()
                        .HasForeignKey("UserBasketBasketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EfLesson.Models.UserModel", null)
                        .WithMany()
                        .HasForeignKey("UserModelsUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EfLesson.Models.Product", b =>
                {
                    b.HasOne("EfLesson.Models.BasketModel", null)
                        .WithMany("ProductsFromBasket")
                        .HasForeignKey("BasketModelBasketId");

                    b.HasOne("EfLesson.Models.OrderModel", null)
                        .WithMany("ProductsFromOrder")
                        .HasForeignKey("OrderModelOrderId");
                });

            modelBuilder.Entity("OrderModelUserModel", b =>
                {
                    b.HasOne("EfLesson.Models.OrderModel", null)
                        .WithMany()
                        .HasForeignKey("OrdersOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EfLesson.Models.UserModel", null)
                        .WithMany()
                        .HasForeignKey("UsersUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EfLesson.Models.BasketModel", b =>
                {
                    b.Navigation("ProductsFromBasket");
                });

            modelBuilder.Entity("EfLesson.Models.OrderModel", b =>
                {
                    b.Navigation("ProductsFromOrder");
                });
#pragma warning restore 612, 618
        }
    }
}
